SmaCCParseNode subclass: #FileNode	instanceVariableNames: 'lines'	classVariableNames: ''	package: 'SmaCC_Line_Parser'!!FileNode methodsFor: 'generated-initialize-release'!initialize	super initialize.	lines := OrderedCollection new: 2.! !!FileNode methodsFor: 'generated'!compositeTokenVariables	^ #(#lines)! !!FileNode methodsFor: 'generated'!lines: anOrderedCollection	lines := anOrderedCollection! !!FileNode methodsFor: 'generated'!lines	^ lines! !!FileNode methodsFor: 'generated'!acceptVisitor: aFileNodeVisitor	^ aFileNodeVisitor visitFileNode: self! !SmaCCParseNodeVisitor subclass: #FileNodeVisitor	instanceVariableNames: ''	classVariableNames: ''	package: 'SmaCC_Line_Parser'!!FileNodeVisitor methodsFor: 'generated'!visitFileNode: aFileNode	^ self visitSmaCCParseNode: aFileNode! !SmaCCParser subclass: #LineParser	instanceVariableNames: ''	classVariableNames: ''	package: 'SmaCC_Line_Parser'!!LineParser methodsFor: 'generated-reduction actions'!reduceActionForLines1: nodes	| result |	result := OrderedCollection new: 2.	self add: (nodes at: 1) to: result.	^ result! !!LineParser methodsFor: 'generated-reduction actions'!reduceActionForFile1: nodes	| result |	result := FileNode new.	result addTokens: (nodes at: 1) to: result lines.	^ result! !!LineParser methodsFor: 'generated-reduction actions'!reduceActionForLines2: nodes	| result |	result := nodes at: 1.	self add: (nodes at: 3) to: result.	^ result! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LineParser class	instanceVariableNames: ''!!LineParser class methodsFor: 'generated'!definitionComment"%root FileNode;<line>	: [^\r\n]+	;<newLine>	: \r | \n | \r\n	;File	: Lines {{FileNode}}	;Lines	: Line	| Lines <newLine> Line	;Line	: 	| <line> 'line'	;"! !!LineParser class methodsFor: 'generated'!symbolTypes	^ #(#SmaCCToken #SmaCCToken #FileNode #FileNode #OrderedCollection #SmaCCToken #SmaCCToken #SmaCCErrorNode)! !!LineParser class methodsFor: 'generated'!startingStateForFile	^ 1! !!LineParser class methodsFor: 'generated'!reduceTable^#(	#(6 0 #nil 146433 false ) 	#(6 1 #liftFirstValue: 146434 false ) 	#(4 1 #reduceActionForFile1: 73729 false ) 	#(5 1 #reduceActionForLines1: 104449 false ) 	#(5 3 #reduceActionForLines2: 104450 false )	).! !!LineParser class methodsFor: 'generated'!symbolNames	^ #('<line>' '<newLine>' 'B e g i n' 'File' 'Lines' 'Line' 'E O F' 'error')! !!LineParser class methodsFor: 'generated'!transitionTable^#(#[1 0 21 0 1 0 6 0 2 0 13 0 4 0 17 0 5 0 21 0 6 0 6 0 7] #[0 0 10 0 2 0 7] #[0 0 0 0 7] #[1 0 25 0 2 0 14 0 7] #[0 0 18 0 2 0 7] #[1 0 29 0 1 0 6 0 2 0 29 0 6 0 6 0 7] #[0 0 22 0 2 0 7]	).! !!LineParser class methodsFor: 'generated-accessing'!scannerClass	^LineScanner! !!LineParser class methodsFor: 'generated-accessing'!cacheId	^'2019-04-15T17:15:41.487428-05:00'! !SmaCCScanner subclass: #LineScanner	instanceVariableNames: ''	classVariableNames: ''	package: 'SmaCC_Line_Parser'!!LineScanner methodsFor: 'generated'!scanForToken	self step.	currentCharacter == Character lf		ifTrue: [ ^ self recordAndReportMatch: #(2) ].	currentCharacter == Character cr		ifTrue: [ self recordMatch: #(2).			self step.			currentCharacter == Character lf				ifTrue: [ ^ self recordAndReportMatch: #(2) ].			^ self reportLastMatch ].	true		ifTrue: [ [ self recordMatch: #(1).			self step.			currentCharacter <= Character tab				or: [ (currentCharacter between: Character pageUp and: Character newPage)						or: [ currentCharacter >= (Character value: 14) ] ] ] whileTrue ].	^ self reportLastMatch! !!LineScanner methodsFor: 'generated'!emptySymbolTokenId	^ 7! !!LineScanner methodsFor: 'generated'!errorTokenId	^ 8! !