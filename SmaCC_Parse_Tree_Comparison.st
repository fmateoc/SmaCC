CommandLineHandler subclass: #SmaCCParseTreeComparisonCommandLineHandler	instanceVariableNames: ''	classVariableNames: ''	package: 'SmaCC_Parse_Tree_Comparison'!!SmaCCParseTreeComparisonCommandLineHandler methodsFor: 'public'!openFile: aString	^ [ aString asFileReference readStream ]		on: Error		do: [ :ex | self exitFailure ]! !!SmaCCParseTreeComparisonCommandLineHandler methodsFor: 'public'!parserClassFor: aString	^ SmaCCParser allSubclasses		detect: [ :each | each fileExtension = ('.' , aString) ]		ifNone: [ self exitFailure: 'Cannot find parser for file type: ' , aString ]! !!SmaCCParseTreeComparisonCommandLineHandler methodsFor: 'public'!activate	self arguments size ~= 2		ifTrue: [ self exitFailure: 'Please supply two filenames to compare' ].	self compareFile: self arguments first to: self arguments last! !!SmaCCParseTreeComparisonCommandLineHandler methodsFor: 'public'!compareFile: aString to: anotherString	| tree1 tree2 |	tree1 := self parseTreeFor: aString.	tree2 := self parseTreeFor: anotherString.	tree1 = tree2		ifFalse: [ self exitFailure: 'ASTs are different' ].	self exitSuccess! !!SmaCCParseTreeComparisonCommandLineHandler methodsFor: 'public'!parseTreeFor: aString	| parserClass stream |	parserClass := self parserClassFor: aString asFileReference extension.	stream := self openFile: aString.	^ [ [ parserClass parseStream: stream ]		on: Error		do: [ :ex | self exitFailure: ex description ] ]		ensure: [ stream close ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SmaCCParseTreeComparisonCommandLineHandler class	instanceVariableNames: ''!!SmaCCParseTreeComparisonCommandLineHandler class methodsFor: 'accessing'!commandName	^ 'SmaCCCompareParseTrees'! !